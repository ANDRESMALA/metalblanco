/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package metalblanco.map.com;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlRootElement;

/**
 *
 * @author andresmalagueno
 */
@Entity
@Table(name = "DETALLE_TEMP_COT")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "DetalleTempCot.findAll", query = "SELECT d FROM DetalleTempCot d"),
    @NamedQuery(name = "DetalleTempCot.findByIdDetTemCot", query = "SELECT d FROM DetalleTempCot d WHERE d.idDetTemCot = :idDetTemCot"),
    @NamedQuery(name = "DetalleTempCot.findByCodProducto", query = "SELECT d FROM DetalleTempCot d WHERE d.codProducto = :codProducto"),
    @NamedQuery(name = "DetalleTempCot.findByDescripcion", query = "SELECT d FROM DetalleTempCot d WHERE d.descripcion = :descripcion"),
    @NamedQuery(name = "DetalleTempCot.findByCantidad", query = "SELECT d FROM DetalleTempCot d WHERE d.cantidad = :cantidad"),
    @NamedQuery(name = "DetalleTempCot.findByValorUnitario", query = "SELECT d FROM DetalleTempCot d WHERE d.valorUnitario = :valorUnitario"),
    @NamedQuery(name = "DetalleTempCot.findByDescuento", query = "SELECT d FROM DetalleTempCot d WHERE d.descuento = :descuento"),
    @NamedQuery(name = "DetalleTempCot.findBySubtotal", query = "SELECT d FROM DetalleTempCot d WHERE d.subtotal = :subtotal")})
public class DetalleTempCot implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "id_det_tem_cot")
    private Integer idDetTemCot;
    @Basic(optional = false)
    @Column(name = "cod_producto")
    private String codProducto;
    @Basic(optional = false)
    @Column(name = "descripcion")
    private String descripcion;
    @Basic(optional = false)
    @Column(name = "cantidad")
    private int cantidad;
    @Basic(optional = false)
    @Column(name = "valor_unitario")
    private double valorUnitario;
    @Basic(optional = false)
    @Column(name = "descuento")
    private double descuento;
    @Basic(optional = false)
    @Column(name = "subtotal")
    private double subtotal;

    public DetalleTempCot() {
    }

    public DetalleTempCot(Integer idDetTemCot) {
        this.idDetTemCot = idDetTemCot;
    }

    public DetalleTempCot(Integer idDetTemCot, String codProducto, String descripcion, int cantidad, double valorUnitario, double descuento, double subtotal) {
        this.idDetTemCot = idDetTemCot;
        this.codProducto = codProducto;
        this.descripcion = descripcion;
        this.cantidad = cantidad;
        this.valorUnitario = valorUnitario;
        this.descuento = descuento;
        this.subtotal = subtotal;
    }

    public Integer getIdDetTemCot() {
        return idDetTemCot;
    }

    public void setIdDetTemCot(Integer idDetTemCot) {
        this.idDetTemCot = idDetTemCot;
    }

    public String getCodProducto() {
        return codProducto;
    }

    public void setCodProducto(String codProducto) {
        this.codProducto = codProducto;
    }

    public String getDescripcion() {
        return descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    public int getCantidad() {
        return cantidad;
    }

    public void setCantidad(int cantidad) {
        this.cantidad = cantidad;
    }

    public double getValorUnitario() {
        return valorUnitario;
    }

    public void setValorUnitario(double valorUnitario) {
        this.valorUnitario = valorUnitario;
    }

    public double getDescuento() {
        return descuento;
    }

    public void setDescuento(double descuento) {
        this.descuento = descuento;
    }

    public double getSubtotal() {
        return subtotal;
    }

    public void setSubtotal(double subtotal) {
        this.subtotal = subtotal;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (idDetTemCot != null ? idDetTemCot.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof DetalleTempCot)) {
            return false;
        }
        DetalleTempCot other = (DetalleTempCot) object;
        if ((this.idDetTemCot == null && other.idDetTemCot != null) || (this.idDetTemCot != null && !this.idDetTemCot.equals(other.idDetTemCot))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "metalblanco.map.com.DetalleTempCot[ idDetTemCot=" + idDetTemCot + " ]";
    }
    
}
